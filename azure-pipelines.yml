# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# Demo Pipeline: echoes through multiâ€‘stage flow
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

trigger:
  branches:
    include:
      - main

variables:
  demoVar: 'HelloDemo'

pool:
  name: Default

stages:

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Stage A: Build â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
- stage: Build
  displayName: 'ðŸ”¨ Build'
  jobs:
    - job: BuildJob
      displayName: 'Compile (echo)'
      variables:                  # these live only in the BuildJob
        jobTimeoutSecs: 300
      steps:
        - script: |
            echo "[$(System.StageName)] Building... $(demoVar)"
            echo "This job has a timeout of $(jobTimeoutSecs) seconds."
          displayName: 'Build step'

        - script: |
            echo "Publishing build artifact..."
          displayName: 'Publish artifact'

- stage: InbuiltDemo
  displayName: 'ðŸ‘€ InbuiltVariable Demo'
  dependsOn: Build
  jobs:
    - job: PrintVars
      displayName: 'Echo Variables'
      pool:
        name: Default
      steps:
        - script: |
            echo "=== Azure DevOps Variables Demo ==="
            echo "Build ID            : $(Build.BuildId)"
            echo "Build Number        : $(Build.BuildNumber)"
            echo "Definition Name     : $(Build.DefinitionName)"
            echo "Repo Name           : $(Build.Repository.Name)"
            echo "Source Branch       : $(Build.SourceBranch)"
            echo "Source Version (SHA): $(Build.SourceVersion)"
            echo "Team Project        : $(System.TeamProject)"
            echo "Stage Name          : $(System.StageName)"
            echo "Job Name            : $(System.JobName)"
            echo "Agent Name          : $(Agent.Name)"
            echo "Agent OS            : $(Agent.OS)"
            echo "Pipeline Workspace              : $(Pipeline.Workspace)"
            echo "Default Working Directory (s)   : $(System.DefaultWorkingDirectory)"
            echo "Sources Directory (s)           : $(Build.SourcesDirectory)"
            echo "Artifact Staging Directory (a)  : $(Build.ArtifactStagingDirectory)"
            echo "Temporary Directory             : $(Agent.TempDirectory)"
          displayName: 'Print all key variables'

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Stage B: Test â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
- stage: Test
  displayName: 'ðŸ§ª Test'
  dependsOn: Build     # runs only after Build completes
  jobs:
    - job: UnitTestJob
      displayName: 'Unit tests'
      steps:
        - script: |
            echo "[$(Build.StageName)] Running unit tests..."
          displayName: 'Unit test step'

    - job: IntegrationTestJob
      displayName: 'Integration tests'
      dependsOn: UnitTestJob   # jobâ€‘level dependency
      steps:
        - script: |
            echo "[$(Build.StageName)] Running integration tests..."
          displayName: 'Integration test step'

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Stage C: Security (parallel) â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
- stage: Security
  displayName: 'ðŸ”’ Security Scan'
  dependsOn: []        # empty list â‡’ starts in parallel to any other stage
  jobs:
    - job: SAST
      displayName: 'Static Analysis'
      steps:
        - script: |
            echo "[$(Build.StageName)] Running SAST..."
          displayName: 'SAST echo'

    - job: DAST
      displayName: 'Dynamic Analysis'
      steps:
        - script: |
            echo "[$(Build.StageName)] Running DAST..."
          displayName: 'DAST echo'

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Stage D: Deploy â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
- stage: Deploy
  displayName: 'ðŸš€ Deploy'
  dependsOn:
    - Test
    - Security    # waits for both Test & Security to finish
  jobs:
    - job: DeployJob
      displayName: 'Deploy to Dev (echo)'
      steps:
        - script: |
            echo "[$(Build.StageName)] Deploying application..."
          displayName: 'Deploy step'

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Stage E: Report â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
- stage: Report
  displayName: 'ðŸ“Š Report'
  # no dependsOn â‡’ runs after all prior stages (Build, Test, Security, Deploy) succeed
  jobs:
    - job: ReportJob
      displayName: 'Generate report'
      steps:
        - script: |
            echo "[$(Build.StageName)] Generating and publishing report..."
          displayName: 'Report step'

